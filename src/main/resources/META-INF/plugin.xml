<idea-plugin>
    <id>cadence-language.cadence-for-intellij-platform</id>
    <name>Cadence</name>
    <vendor email="cadence.tools@gmail.com" url="https://github.com/cadence-tools/cadence-for-intellij-platform">Cadence Tools</vendor>

    <description><![CDATA[
    Support for <em><a href="https://docs.onflow.org/cadence/language/">Cadence</a></em> language.
    This plugin provides syntax highlighting and basic language server protocol support for Cadence (.cdc) files.
    For the language server protocol support, please ensure you have installed flow-cli, and it is available in the PATH
    ]]></description>
    <change-notes>
        Alpha release, with syntax highlighting and basic language server support
    </change-notes>

    <!-- please see https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="Cadence File" implementationClass="cadence.language.config.CadenceFileType"
                  fieldName="INSTANCE" language="Cadence" extensions="cdc"/>
        <lang.parserDefinition language="Cadence"
                               implementationClass="cadence.language.CadenceParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Cadence"
                                       implementationClass="cadence.language.syntax.highlighting.CadenceSyntaxHighlighterFactory"/>
        <colorSettingsPage implementation="cadence.language.syntax.highlighting.CadenceColorSettingsPage"/>

        <!-- LSP Support through ballerina -->

        <preloadingActivity implementation="cadence.language.lsp.CadenceLanguageServerPreloadingActivity"
                            id="cadence.language.lsp.CadenceLanguageServerPreloadingActivity" />
        <!-- register intellijLanguageClient as a Service OR as a plugin component (see readme)... -->
        <applicationService serviceImplementation="org.wso2.lsp4intellij.IntellijLanguageClient"/>

        <!-- register a listener on editor events, required for lsp file sync -->
        <editorFactoryListener implementation="org.wso2.lsp4intellij.listeners.LSPEditorListener"/>
        <fileDocumentManagerListener implementation="org.wso2.lsp4intellij.listeners.LSPFileDocumentManagerListener"/>

        <!-- for displaying notifications by lsp -->
        <notificationGroup id="lsp" displayType="STICKY_BALLOON"/>

        <!-- for displaying the statusbar icon
        <statusBarWidgetFactory implementation="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                                id="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                                order="first" />
-->
        <!-- needed for completion -->
        <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"
                                id="org.wso2.lsp4intellij.contributors.LSPCompletionContributor" language="Cadence"/>
        <!-- needed for completion as well as signature help -->
        <typedHandler implementation="org.wso2.lsp4intellij.listeners.LSPTypedHandler"
                      id="LSPTypedHandler"/>

        <!-- needed for code diagnostics -->
        <externalAnnotator id="LSPAnnotator" language="Cadence"
                           implementationClass="org.wso2.lsp4intellij.contributors.annotator.LSPAnnotator"/>

        <!-- needed for Workspace Symbols -->
        <gotoSymbolContributor implementation="org.wso2.lsp4intellij.contributors.symbol.LSPSymbolContributor"
                               id="LSPSymbolContributor"/>

        <!-- needed for renaming -->
        <renameHandler implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameHandler" id="LSPRenameHandler" order="first"/>
        <renamePsiElementProcessor implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameProcessor" id="LSPRenameProcessor" order="first"/>

    </extensions>

    <actions>
    </actions>
</idea-plugin>